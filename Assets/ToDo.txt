-encroachment manager appears to be unused.

- so again... the whole point here is...  ok, putting _amounts_ of fuel into the blocker, so that it can be recharged to block poll spread
- ok i like the idea that... you can use the fuel now vs putting it into the spawner and getting more...

- problem: high priority pollution is killing low priority pollution, causing the low priority pollution to drop stuff...  not good...

- update operable spawner amount - X
- update amounts in the pickupables - X
- update building required item amount (0) -??? - do we have any of these? - i think we got these...

- changing all the inventory stuff to have amounts... need to test all this stuff pretty well.
- need to fix the inventory visualizers

- i think the best way to do this might be... simply leaving the callbacks on the inventory component and maybe just having a specialized
- component for the fueled blocker...  that way, the inventory component is just doing the callbacks...
- ok, for this... InventoryItem needs to have an amount in it......  i think that's fine... 


general "fueled" - on add, do something (callback).  on delete, do something (callback)

maybe for gridmap things -- give an error that the thing must be a child of a gridmap...?
	- could do this both runtime and in editor


so first -- building inventory...  
	- might have to fix how the pollution block spread works
	- map effect - block - when inventor has fuel in it

	- actor unit can place the fuel in there - what is fuel?  mushroom?  clean mushroom?
		- not sure...  maybe... the building itself specifies what fuel it can have...  ok.  
		- fuel component maybe?
	- when pollution would spawn in block area, the fuel is depleted
	- when fuel is 0, map effect goes away...

	- for this purpose, need to figure out how we even set the map effects...  might hard to put in there...

	- maybe redo the pollutionblockoverlaytilemap as it's quite messy and was kind of an ad hoc bandaid...  
	- but we don't really even need to use this for now...
	- the pollution thing is on the scriptableobject of pollutiondata...?  that's quite indirect...   


		cool, inventory has nothing to do with actorunit, so i can put this on buildings...  let's do that for the blocker.
	- will need to make a "store" action that involves storing the thingy in the building
	- i guess "effect" that will "deplete" the item...

- things like mushrooms get put into blocker inventory. Lose charges when pollution “would” hit.  
- killing pollution improves pollution kill stat, making a pollution kill building available.  
- poll kill building has a p kill aura whose rate of p kill strength depends on stat.

Like w xcom, they come at you w weapons and you can research them.

Maybe that building - the brain - is the one we want to be the one that can lose.

Alarm and terror.  Alarm is their strength.  Terror is how afraid they are.


so i think i need to make some changes to the pollution spread -- should spread from pollution spreader objects?



Need some basic combination of these things to get a satisfying game loop with win/lose condition...
Test out a bunch of building ideas.  I think we've created enough systems.
	- one idea is a low angle sprayer that sprays/deletes pollution
	- other blockers?
	- trainers (train up the units stats)?
	- planters/growers?
	- buildings for more advanced pollution
	- objects to research?



Definitely feels good to find thingies under the pollution.  The cleaning thing feels decent but gets repetitive very quickly.
RN, let's add things.  maybe add new pickups and thus buildings/things you can make...

One of the main things should be...  getting more little guys.  They can be locked behind different obstacles...

I think we need to prioritize the good ideas.  Right now there's maybe 3-5 minutes of interesting gameplay.  How do we extend this?
I think the main idea that games like this use to keep interest is changing up the gameplay loop.  Gameplay loop evolves as you progress.
We need to implement ideas to do this.  I have no idea whether any of the main mechanics are actually good.  Maybe let's stick with some
of what we have an continue from there.

OK... we have a roots idea...???  This was obviously not implemented..  
ABOVE: Coming back after 2 years
=======


- so we have to check connectivity pretty frequently i think -- basically... any time we need to know whether a building is operating
- so...  doing a pathfinder every frame is probably not going to be great.  actually it would be multiple pathfinders -- one for each building that can be enabled
--> isn't this just a "graph coloring" thing?  why path find every time, that makes no sense...
- so we will have to do the custom function for this... ok fine let's just do it
- root network node is a building component.  it has a network id, which is set by the root manager.
- resources on the map.  link up a root to gain access to those resources.  use them up, the resources deplete.  
- build a root...  how do we limit this.  

set the origin for root growth as the closest point in the building to the target.
use the midpoint of the building as the origin point for the radius.  alternatively, use the closest point from the building.
need to work out the root network thing...  
-- let's try to do it with...  the pathfinder... put a pathfinder in ...  the root manager.
otherwise we need a special root walker...  

next to do:
- roots enable buildings -- do an enable component... then we can centralize all the "is enabled" stuff...
- certain building connected to roots required to clean pollution level 2

GAMEPLAY IDEAS:

ROOTS:
- roots grow faster the closer they are to the cleaner building.
- all buildings require roots connection to function
- roots allow you to select a target - they grow towards the selected target.
- Root growth required for certain operations in trees.  Root growth -> diminishing returns so you need a certain density of trees.
- maybe simplify the pollution blocking?  i like the transform into building thing, but i think using the two guys - plant and mushroom - isn't great.  instead,
	let's use mushrooms--pick up spores, must plant the spores on a dead tree.  the dead tree should disintegrate.  a tree can always turn into a dead tree.
- roots provide stat spreading
- separate building for growing plants.  you grow into it.
- drop inventory when you die
- healer building
- links between trees can improve the total number you can build.  

RESEARCH:
- research tree?

WINNING/LOSING:
- more interesting win condition
- drop inventory ability
- blocker objects expendable as they clean pollution
- could do a progression --> find the p source for basic, clean it, plant it -- gives you some resource to clean the next level.  find that, clean it, clean up all 
	pollution, you win --> i like it.

BUILDINGS/PLANTING:
- mushrooms decompose trees
- ???

INTERACTION WITH HUMANS:
- >>>>tech is human waste -- need to research it.<<<<
	>>>>so e.g., one drop could be a book...  clean it to learn human language.  lots of other drops possible.
	maybe horrified by things like chainsaws, other forestry type equipment.<<<<

DROPS/ITEMS:
- rare drop items

ABILITIES:
- high level actor unit can make super clean/block building
- higher pollution ability --> better ability -- faster, more squares, maybe better drops/discoveries
- collectable skills (e.g., from drops)

POLLUTION:
- buildings required near advanced pollution to clean it.
- dynamically changing pollution grow speed based on number of pollution-free squares? -- that's a cool way to make the game harder as you go along
- block pollution building only slows it, not totally blocks it.
- different types of pollution.  e.g., appliances, sludge, nuclear stuff.  different ways to clean it up

STATS:
- buildings take on the stats of the unit that creates them
      two abilities: one as a unit, one as a building
      abilities spread through the root networks
- cleaning pollution stat brings you a building for cleaning pollution off things (seeds)
- idea: trees can have pollution of varying severity/difficulty to clean up.  better units are harvested from more polluted trees.
- idea: cleaning pollution stat --> pollution blocking radius on buildings.
- harvested units have randomized stats

WATER:
- something with water -- build bridges (how?).  walk on water?  clean pollution on water?

EXTRA:
- underground "streams" of pollution?  cause pollution to pop up under your stuff?
- pipe to send pollution out to human settlements
- mobile enemies?  loggers?  exterminators?
- spawn things like mosquitos to fend off humans.  maybe can be done by creating a pool of standing water.
- spawn animals to create diseases to fend off humans.
- threat meter, warning meter.  more you do, higher it goes, threats get worse.
- go/build on water (to clean pollution)...
- you can build an area -- the area defines how many units you can have.  
- re sentience: maybe you get abilities as a forest itself...
- in addition to cleaning pollution, need to terraform (e.g., remove water/whatever...) (???) --> i don't' think this meshes with the flavor of "cleaning" the forest.  
	except maybe something like restoring bodies of water.

UI/EOU Fixes:
- fix selectable to cycle through objects in a tile.
- need to make sure roots don't grow inside of trees (just remove certain first nodes).
- context click for buildings too... see if we can generalize the actorunitcontextclick.
- area of effect tools
- units shouldn't stack
- queue unit actions (w/ visual feedback)
- debug mouseover -- give it a timer to limit update frequency.
- add an info panel for the unit you clicked on
- need to refactor the unitactioncontextclick
- need to make the pollution sources as buildings.
- pollution source manager
- game state manager w/ win/loss
- game state manager checks pollution source manager
- add: error/status messages in game.
- since cleaning pollution will be such a big part of the game, i think we need to reduce the number of clicks necessary.  we can go with the "Traditional" method of 
	removing control of individual units and just designating orders for parts of the map.  but i think an intermediate method of allowing dragged rectangles for cleaning 
	would be best.  try it out and see if not.

CODE IMPROVEMENTS:
Maybe we want to get rid of all the singletons and just do "findobjectinscene" which really isn't that terrible if you do it once...
I think I'd rather have that because it would have all references be to actual objects in the scene rather than based on some c# statics.
This would allow normal scene cleanup, etc., to properly delete all the old stuff, etc...  I hope.

Move placement cursor into the place building tool?

if any action cannot happen, the entire queue should get dropped.

pixel art: https://www.reddit.com/r/IndieGaming/comments/msfjpe/hello_i_am_a_pixel_artist_that_goes_by_the_name/
https://opengameart.org/content/swamp-2d-tileset-pixel-art
